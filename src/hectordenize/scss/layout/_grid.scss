// ./hectordenize/scss/layout/_grid.scss
// GRID LAYOUT

@use '../core/breakpoints' as brkpnts;

// ------------------------------------------------------------------
// --------- AVAILABLE GRID HELPERS ---------
// ------------------------------------------------------------------

// .grid, .grid--no-gap

// {i} = from 1 trough 4
// .gapX-{i}, .gapY-{i}

// .col-{i}       XS screen || ALL screens
// .col-s-{i}     S screen
// .col-m-{i}     M screen
// .col-l-{i}     L screen
// .col-xl-{i}    XL screen
// .col-xxl-{i}   XXL screen
  // .offset-{i}        XS screen || ALL screens
  // .offset-s-{i}      S screen
  // .offset-m-{i}      M screen
  // .offset-l-{i}      L screen
  // .offset-xl-{i}     XL screen
  // .offset-xxl-{i}    XXL screen
// .row-{i}       XS screen || ALL screens
// .row-s-{i}     S screen
// .row-m-{i}     M screen
// .row-l-{i}     L screen
// .row-xl-{i}    XL screen
// .row-xxl-{i}   XXL screen



// ------------------------------------------------------------------
// --------- GRID VARIABLES & MIXINS ---------
// ------------------------------------------------------------------

$gapX: 1rem; // horizontal gutter
$gapY: 1rem; // vertical gutter

// GRID 12 columns
@mixin grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  > * {
    grid-column: span 12;
    grid-row: span 1;
  }
}



// ------------------------------------------------------------------
// --------- GRID SPECIFICATIONS ---------
// ------------------------------------------------------------------

// ------------- GRID -------------

// GRID SYSTEM
.grid {
  @include grid;
  gap: $gapY $gapX;

  &--no-gap {
    @include grid;
    gap: 0 0;
  }

  @for $i from 1 through 4 {
    &.gapX-#{$i} {
      column-gap: #{$i}rem;
    }
    &.gapY-#{$i} {
      row-gap: #{$i}rem;
    }
  }
}

// GRID SYSTEM for XS screen (all), S screen, M screen, L screen, XL screen
@each $screenSizes, $values in brkpnts.$breakpoints {
  @media screen and (min-width: map-get($values, 'min-width')) {
    @for $i from 1 through 12 {
      // col-x      XS screen || ALL screens
      // col-s-x    S screen
      // col-m-x    M screen
      // col-l-x    L screen
      // col-xl-x   XL screen
      .col#{map-get($values, 'label')}-#{$i} {
        grid-column: span + ' ' + #{$i};
        @for $j from 0 through 11 {
          // offset-x      XS screen || ALL screens
          // offset-s-x    S screen
          // offset-m-x    M screen
          // offset-l-x    L screen
          // offset-xl-x   XL screen
          &.offset#{map-get($values, 'label')}-#{$j} {
            grid-column: #{$j+1} + ' / ' + span + ' ' + #{$i};
          }
        }
      }
      // row-x      XS screen || ALL screens
      // row-s-x    S screen
      // row-m-x    M screen
      // row-l-x    L screen
      // row-xl-x   XL screen
      .row#{map-get($values, 'label')}-#{$i} {
        grid-row: span + ' ' + #{$i};
      }
    }
  } 
}

// GRID SYSTEM for XXL screen
@media screen and (min-width: map-get(brkpnts.$breakpointXXL, 'min-width')) {
  @for $i from 1 through 12 {
    // col-xxl-x   XXL screen
    .col#{map-get(brkpnts.$breakpointXXL, 'label')}-#{$i} {
      grid-column: span + ' ' + #{$i};
      @for $j from 0 through 11 {
        // offset-xxl-x   XXL screen
        &.offset#{map-get(brkpnts.$breakpointXXL, 'label')}-#{$j} {
          grid-column: #{$j+1} + ' / ' + span + ' ' + #{$i};
        }
      }
    }
    // row-xxl-x   XXL screen
    .row#{map-get(brkpnts.$breakpointXXL, 'label')}-#{$i} {
      grid-row: span + ' ' + #{$i};
    }
  }
} 

// ------------- END GRID -------------